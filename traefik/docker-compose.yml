version: "3.8"

services:

  traefik:
    image: traefik:2.3
    container_name: traefik
    restart: always
    command:
      - "--providers.docker=true"
      - "--providers.file.directory=/conf"
      - "--providers.file.watch=true"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http"
      - "--certificatesresolvers.letsencrypt.acme.email=support@valhallahosting.ca"
      - "--certificatesresolvers.letsencrypt.acme.storage=/certs/acme.json"
      - "--accesslog=true"
      - "--log.level=ERROR"
      - "--log.filePath=/var/log/traefik.log"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.compress.compress=true"
      - "traefik.http.middlewares.adminauth.basicauth.usersfile=/conf/admin.auth"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - traefik
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: volume
        source: traefik
        target: /certs
      - type: bind
        source: $HOME/traefik/conf
        target: /conf
        read_only: true

  nginx:
    image: local/nginx:1.19.5
    container_name: nginx
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.nginx.headers.contentSecurityPolicy=default-src 'self'; style-src 'self' 'unsafe-inline'"
      - "traefik.http.routers.nginx.rule=Host(`cdn.valhallahosting.ca`) || Host(`192.168.2.100`)" 
      - "traefik.http.routers.nginx.entrypoints=https"
      - "traefik.http.routers.nginx.service=nginx"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.nginx.tls.certresolver=letsencrypt"
      - "traefik.http.routers.nginx.middlewares=compress,nginx"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
    networks:
      - traefik
    volumes:
      - type: volume
        source: nginx-log
        target: /var/log/nginx
      - type: volume
        source: nginx-conf
        target: /etc/nginx
        read_only: true
      - type: bind
        source: /mnt/samba
        target: /usr/share/nginx/html
        read_only: true
      - type: bind
        source: $HOME/traefik/auth
        target: /auth
        read_only: true

  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    hostname: netdata.cdn.valhallahosting.ca
    restart: always
    cap_add:
      - "SYS_PTRACE"
    security_opt:
      - "apparmor:unconfined"
    labels:
      - "logspout.exclude=true"
      - "traefik.enable=true"
      - "traefik.http.middlewares.netdata.headers.contentSecurityPolicy=default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' https://www.googletagmanager.com; img-src 'self' data:; connect-src 'self' https://registry.my-netdata.io https://www.googleapis.com; frame-src 'self' https://app.netdata.cloud"
      - "traefik.http.routers.netdata.rule=Host(`netdata.cdn.valhallahosting.ca`)"
      - "traefik.http.routers.netdata.entrypoints=https"
      - "traefik.http.routers.netdata.service=netdata"
      - "traefik.http.routers.netdata.tls=true"
      - "traefik.http.routers.netdata.tls.certresolver=letsencrypt"
      - "traefik.http.routers.netdata.middlewares=compress,netdata"
      - "traefik.http.services.netdata.loadbalancer.server.port=19999"
    networks:
      - traefik
    volumes:
      - type: bind
        source: /proc
        target: /host/proc
        read_only: true
      - type: bind
        source: /sys
        target: /host/sys
        read_only: true

networks:
  traefik:
    name: traefik
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br_traefik
    ipam:
      driver: default
      config:
        - subnet: 10.160.0.0/22

volumes:
  traefik:
  nginx-log:
  nginx-conf:
